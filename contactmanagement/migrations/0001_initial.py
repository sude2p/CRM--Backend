# Generated by Django 5.1 on 2024-09-09 06:15

import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("zip_code", models.CharField(max_length=10)),
                ("country", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Deal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("value", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("negotiation", "Negotiation"),
                            ("proposal sent", "Proposal Sent"),
                            ("closed won", "Closed Won"),
                            ("closed lost", "Closed Lost"),
                            ("on hold", "On Hold"),
                        ],
                        max_length=100,
                    ),
                ),
                ("close_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("won", "Won"), ("lost", "Lost"), ("open", "Open")],
                        default="open",
                        max_length=100,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100)),
                ("job_title", models.CharField(max_length=100)),
                (
                    "phone_work",
                    encrypted_model_fields.fields.EncryptedCharField(
                        blank=True, null=True
                    ),
                ),
                (
                    "phone_mobile",
                    encrypted_model_fields.fields.EncryptedCharField(
                        blank=True, null=True
                    ),
                ),
                (
                    "email",
                    encrypted_model_fields.fields.EncryptedEmailField(unique=True),
                ),
                (
                    "lead_source",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("agriculture", "Agriculture"),
                            ("banking", "Banking"),
                            ("construction", "Construction"),
                            ("education", "Education"),
                            ("finance", "Finance"),
                            ("healthcare", "Healthcare"),
                            ("manufacturing", "Manufacturing"),
                            ("retail", "Retail"),
                            ("transportation", "Transportation"),
                            ("technology", "Technology"),
                            ("telecom", "Telecom"),
                            ("travel", "Travel"),
                            ("other", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("deleted", "Deleted"),
                            ("Prospect", "Prospect"),
                        ],
                        default="active",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    encrypted_model_fields.fields.EncryptedTextField(
                        blank=True, null=True
                    ),
                ),
                ("last_contacted_date", models.DateField(blank=True, null=True)),
                ("next_follow_up_date", models.DateField(blank=True, null=True)),
                (
                    "preferred_contact_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("phone", "Phone"),
                            ("email", "Email"),
                            ("chat", "Chat"),
                            ("sms", "SMS"),
                            ("other", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("linkedin", models.URLField(blank=True, null=True)),
                ("twitter", models.URLField(blank=True, null=True)),
                ("facebook", models.URLField(blank=True, null=True)),
                ("birthdate", models.DateField(blank=True, null=True)),
                ("custom_fields", models.JSONField(blank=True, null=True)),
                (
                    "address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contactmanagement.address",
                    ),
                ),
                (
                    "contact_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.organizationdetail",
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "deals",
                    models.ManyToManyField(blank=True, to="contactmanagement.deal"),
                ),
                (
                    "tags",
                    models.ManyToManyField(blank=True, to="contactmanagement.tag"),
                ),
            ],
        ),
    ]
